/*
 * @Author: xuebin.me
 * @Date: 2019-01-07 13:22:01
 * @LastEditTime: 2019-08-22 18:34:39
 * @version: 0.0.0
 * @Description:
 * Â≠§Áã¨ÂçáÁ∫ßÂûíÁ†ÅÔºåÂ§ßÊàò‰∫ßÂìÅÊ≥™‰∏ãÔºå
 * Âêà‰ΩúÂºÄÂèë‰∫íÊéêÔºåÂ§ïÈò≥Ë•ø‰∏ãÔºåÁ†ÅÂ•¥‰∫∫Âú®Â§©Ê∂Ø
 */
/**
 **************************************************************
 *                                                            *
 *   .=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-.       *
 *    |                     ______                     |      *
 *    |                  .-"      "-.                  |      *
 *    |                 /            \                 |      *
 *    |     _          |              |          _     |      *
 *    |    ( \         |,  .-.  .-.  ,|         / )    |      *
 *    |     > "=._     | )(__/  \__)( |     _.=" <     |      *
 *    |    (_/"=._"=._ |/     /\     \| _.="_.="\_)    |      *
 *    |           "=._"(_     ^^     _)"_.="           |      *
 *    |               "=\__|IIIIII|__/="               |      *
 *    |              _.="| \IIIIII/ |"=._              |      *
 *    |    _     _.="_.="\          /"=._"=._     _    |      *
 *    |   ( \_.="_.="     `--------`     "=._"=._/ )   |      *
 *    |    > _.="                            "=._ <    |      *
 *    |   (_/                                    \_)   |      *
 *    |                                                |      *
 *    '-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-='      *
 *                                                            *
 *           LASCIATE OGNI SPERANZA, VOI CH'ENTRATE           *
 *                ÔºàËØëÊñáÔºöËøõÊù•ÁöÑ‰∫∫ÔºåÊîæÂºÉ‰∏ÄÂàáÂ∏åÊúõÔºâ                  *
 **************************************************************
 */

import axios from 'axios'

// #region Http
/**
 * Http
 *
 * @export
 * @class Http
 */
export class Http {
  constructor(option = { headers: {} }) {
    const { headers, options } = option
    this.config = {
      // baseURL: ENV.api,
      headers: {
        'Content-Type': 'application/json;charset=UTF-8',
        ...headers
      },
      ...options
    }

    // Êú¨Âú∞ÂºÄÂèëÊé•Âè£ËØ∑Ê±Ç‰ΩøÁî®whistlejs‰ª£ÁêÜÈÖçÁΩÆ
    // if (process.env.NODE_ENV !== 'production') {
    //   this.config.proxy = {
    //     host: '127.0.0.1',
    //     port: 8899
    //   }
    // }

    // #region response status: ËØ∑Ê±ÇÂ∑≤ÂèëÂá∫Ôºå‰ΩÜÊòØ‰∏çÂú®2xxÁöÑËåÉÂõ¥
    this.statusCode = {
      404: '404,ÈîôËØØËØ∑Ê±Ç',
      401: 'Êú™ÊéàÊùÉÔºåËØ∑ÈáçÊñ∞ÁôªÂΩï',
      403: 'Á¶ÅÊ≠¢ËÆøÈóÆ',
      408: 'ËØ∑Ê±ÇË∂ÖÊó∂',
      500: 'ÊúçÂä°Âô®ÂÜÖÈÉ®ÈîôËØØ',
      501: 'ÂäüËÉΩÊú™ÂÆûÁé∞',
      502: 'ÊúçÂä°‰∏çÂèØÁî®',
      503: 'ÊúçÂä°‰∏çÂèØÁî®',
      504: 'ÁΩëÂÖ≥ÈîôËØØ',
      510: 'ÊúçÂä°Âô®ÂÜÖÈÉ®ÈîôËØØ'
    }
    // #endregion

    this.instance = axios.create(this.config)

    this.requestUse()
    this.responseUse()

    return this.instance
  }

  resHandler(res) {
    const status = res?.data?.code || res?.status || res?.response?.status || res?.request?.status
    const errorInfo = this.statusCode[status]

    // const url = window.location;
    // const bkurl = encodeURIComponent(url.href);

    // ! Â¶ÇÊûú‰ª•‰∏ã code ÁöÑÈîôËØØ‰ø°ÊÅØ‰∏çÈúÄË¶ÅÊèêÁ§∫ÂèØÂú® {@link store/utils/response-handler.js} ‰∏≠Ê∑ªÂä†ÂøΩÁï•
    const errorHandler = {}

    return errorHandler[status]?.() || (errorInfo&&Promise.reject(new Error(errorInfo))) || res?.data || res // eslint-disable-line
  }

  // #region ËØ∑Ê±ÇÊã¶Êà™Âô®
  requestUse() {
    this.instance.interceptors.request.use(
      config => {
        console.info(`üîä „ÄêËØ∑Ê±ÇÊã¶Êà™Âô®„Äë -> ${config?.url}`, config)
        return config
      },
      error => {
        console.info('üîä „ÄêËØ∑Ê±ÇÊã¶Êà™Âô®„Äë -> error', error)
        return error
      }
    )
  }
  // #endregion

  // #region ÂìçÂ∫îÊã¶Êà™Âô®
  responseUse() {
    this.instance.interceptors.response.use(
      res => {
        console.info(`üîä „ÄêÂìçÂ∫îÊã¶Êà™Âô®„Äë -> ${res?.config?.url}`, res)
        return this.resHandler(res)
      },
      res => {
        console.info(`üîä „ÄêÂìçÂ∫îÊã¶Êà™Âô®„Äë -> error -> ${res?.config?.url}`, res)
        return this.resHandler(res)
      }
    )
  }
  // #endregion
}
// #endregion

// #region HttpBlob
/**
 * ËøîÂõûblobÊñá‰ª∂ÊµÅ
 * @export
 * @class HttpBlob
 * @extends {Http}
 */
export class HttpBlob extends Http {
  constructor(
    option = {
      responseType: 'blob'
    }
  ) {
    super(option)
    return this.instance
  }
}
// #endregion
